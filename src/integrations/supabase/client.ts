// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://gvoxndztrrpwhddvfhrr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd2b3huZHp0cnJwd2hkZHZmaHJyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE3ODgzMTcsImV4cCI6MjA2NzM2NDMxN30.9ln9YldaZakMFo80Z-v2oyQQ7UdN6BFOOZ8kQ8vq9Ow";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  },
  global: {
    headers: {
      'X-Client-Info': 'supabase-js-web'
    }
  }
});

// Clear corrupted session data on initialization
const clearCorruptedSession = async () => {
  try {
    const { data: { session }, error } = await supabase.auth.getSession();
    if (error && error.message.includes('refresh_token_not_found')) {
      console.log('Clearing corrupted session data...');
      await supabase.auth.signOut();
      localStorage.removeItem('supabase.auth.token');
      sessionStorage.clear();
    }
  } catch (error) {
    console.log('Session cleanup completed');
  }
};

// Initialize session cleanup
clearCorruptedSession();